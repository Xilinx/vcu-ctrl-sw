/******************************************************************************
* The VCU_MCU_firmware files distributed with this project are provided in binary
* form under the following license; source files are not provided.
*
* While the following license is similar to the MIT open-source license,
* it is NOT the MIT open source license or any other OSI-approved open-source license.
*
* Copyright (C) 2015-2022 Allegro DVT2
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
******************************************************************************/

/**************************************************************************//*!
   \addtogroup FourCC
   @{
   \file
 *****************************************************************************/

#pragma once
#include "lib_common/FourCC.h"

/*************************************************************************//*!
   \brief Returns the FOURCC identifier of the framebuffer the encoder is expecting
   according to the chosen encoding chroma mode, bitdepth and storage mode.
   \param[in] picFmt source picture format
   \return Returns the corresponding TFourCC format
*****************************************************************************/
TFourCC AL_EncGetSrcFourCC(AL_TPicFormat const picFmt);

/*************************************************************************//*!
   \brief Returns the TPicFormat of the framebuffer the encoder is expecting
   according to the chosen encoding chroma mode, bitdepth, storage and compression mode.
   \param[in] eChromaMode source picture chroma mode
   \param[in] uBitDepth source picture bit depth
   \param[in] eStorageMode source picture storage mode
   \param[in] bIsCompressed true if source picture is compressed, false otherwise
   \return Returns the corresponding TPicFormat
*****************************************************************************/
AL_TPicFormat AL_EncGetSrcPicFormat(AL_EChromaMode eChromaMode, uint8_t uBitDepth, AL_EFbStorageMode eStorageMode, bool bIsCompressed);

/*************************************************************************//*!
   \brief Returns the FOURCC identifier of the reconstructed frame buffer
   generated by the encoder according to the chosen decoded chroma mode, bitdepth
   and storage mode.
   \param[in] picFmt reconstructed picture format
   \return Returns the corresponding TFourCC format
*****************************************************************************/
TFourCC AL_GetRecFourCC(AL_TPicFormat const picFmt);

/*************************************************************************//*!
   \brief Returns the TPicFormat of the reconstructed frame buffer
   according to the chosen encoding chroma mode, bitdepth, and compression mode.
   \param[in] eChromaMode reconstructed picture chroma mode
   \param[in] uBitDepth reconstructed picture bit depth
   \param[in] bIsCompressed true if reconstructed picture is compressed, false otherwise
   \return Returns the corresponding TPicFormat
*****************************************************************************/
AL_TPicFormat AL_EncGetRecPicFormat(AL_EChromaMode eChromaMode, uint8_t uBitDepth, bool bIsCompressed);

/*@}*/

